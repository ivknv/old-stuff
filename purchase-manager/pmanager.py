#!/usr/bin/env python
# -*- coding: utf-8 -*-

# all the comments except this are autogenerated with CodeCommenter
# see https://github.com/SPython/code-commenter

from PurchaseManager import *

if __name__ == "__main__":
	import argparse
	parser=argparse.ArgumentParser(description="Helps to plan purchases") # Create argument parser
	parser.add_argument("-p", "--path", default=os.path.expanduser("~/.items"), help="Path to CSV file") # Add argument to parser
	parser.add_argument("-m", "--money", type=int, help="Amount of money") # Add argument to parser
	parser.add_argument("-a", "--add-item", action="store_true", help="Add item") # Add argument to parser
	parser.add_argument("-n", "--name", help="Item name") # Add argument to parser
	parser.add_argument("-pr", "--price", type=float, help="Item price") # Add argument to parser
	parser.add_argument("-pri", "--priority", type=float, help="Item priority") # Add argument to parser
	parser.add_argument("-am", "--amount", type=int, help="Amount of items") # Add argument to parser
	parser.add_argument("-rm", "--remove-item", action="store_true", help="Remove item") # Add argument to parser
	args=parser.parse_args() # Parse arguments
	if args.path and args.money:
		check=Calculate(args.money, args.path)
		print("You can buy:")
		for purchase in check.purchases:
			print("%d \033[1m%s\033[0m(s) for %f: total sum is %f" %(check.purchases[purchase]["amount"], purchase, check.purchases[purchase]["price"], check.purchases[purchase]["price"]*check.purchases[purchase]["amount"]))
		print("Remaining money: %f" %(check.remains))
		print("You spent %f" %(args.money-check.remains))
	elif args.add_item and args.path and args.name and args.price and args.priority and args.amount:
		f1=open(args.path, "at")
		f1.write("{},{},{},{}\n".format(args.name, args.price, args.priority, args.amount))
		f1.close()
	elif args.remove_item and args.path and args.name:
		f1=open(args.path)
		fr=f1.read()
		f1.close()
		fr=fr.split("\n")
		frstr=""
		for i in fr:
			if args.name not in i:
				frstr+=i+"\n"
		f1=open(args.path, "w")
		f1.write(frstr[0:-1])
		f1.close()
